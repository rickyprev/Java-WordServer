package csc312.servlet;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.ServletOutputStream;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

public class WordFinder extends HttpServlet {
	
	//
	// HttpServletRequest : information about the request
	//
	// HttpServletResponse : what will be the response
	//
	// workflow: https://jorosjavajams.wordpress.com/servlet-workflow/
	//
	
	
	
	
	
	
    @Override
    protected void doGet(HttpServletRequest req, HttpServletResponse resp)
            throws ServletException, IOException {

    	//http status: https://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html 2xx (ok), 3xx(moved, ...), 4xx(client error), 5xx(server error)
    	//
    	//the browser will react based on the status code such as: to display the content, redirect to the alternate url, display an error page
    	resp.setStatus( HttpServletResponse.SC_OK);

    	//parameter on the URL  http://localhost:8080//wordfinder?contest=<contest id>&game=<1 to 3>&pos=<column><row>
    	//returns the value of a parameter on the url
    	String contestId = req.getParameter("contest");
    	String gameNum=req.getParameter("game");
    	String position=req.getParameter("pos");	//example: a1 or b4
    	String column=position.substring(0, 1);
    	column=column.toLowerCase();
    	int columnInt=0;

    	switch(column){
    	
    	case "a":columnInt=1;break;
    	case "b":columnInt=2;break;
    	case "c":columnInt=3;break;
    	case "d":columnInt=4;break;
    	case "e":columnInt=5;break;

    	default: 
    		System.out.println("Error in the switch statement");
    
    	};
    	
    	if(Integer.parseInt(gameNum)==1)
    	{
    		//solutions for game 1 letters
    		
    		
    		
    	}
    	else if(Integer.parseInt(gameNum)==2)
    	{
    		//solutions for game 2 letters

    		
    	}
    	else if(Integer.parseInt(gameNum)==3)
    	{
    		//solutions for game 3 letters

    		
    	}
    	
    	
    	
    	
    	
    	
    	
    	
    	//
    	//using the outputstream, you can write your output
    	//based on the mimetype, different encoding may be required
    	//
        ServletOutputStream out = resp.getOutputStream();

      
        
        out.flush();
        out.close();

        //HttpSession : allows to store server side information based on a session cookie. As an example: is your session authenticated or not ?
        //
        //time : creationTime, lastAccessedTime (session expired for inactivity)
        //attribute: getAttribute, removeAttribute -> stored value specific for the session
        //invalidate: invalidates the session, removes from the http context

        //Cookie: HttpServletResponse, addCookie, getCookies
        //
        //Cookie: https://docs.oracle.com/javaee/6/api/javax/servlet/http/Cookie.html
        //


    }
}//end class
